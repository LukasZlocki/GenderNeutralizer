@page "/addcandidate"
@using GenderNeutralizer.App.Models
@using GenderNeutralizer.App.Services

@rendermode InteractiveServer

@inject HttpClient Http

@inject ILocalDriveService _driveService

<PageTitle>Add Candidate</PageTitle>

<h1>Add Candidate</h1>

<p>Add your CV here.</p>


<InputFile OnChange="OnInputFileChange" />
@if (uploadedFile != null)
{
    <p>Selected File: @uploadedFile.FileName</p>
    <button class="btn btn-success rounded-pill px-4 shadow" @onclick="UploadToDisc">Upload to Server</button>
}


@code {
    private FileCV? uploadedFile;

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;

        using var stream = file.OpenReadStream(maxAllowedSize: 10_000_000);
        using var memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);

        uploadedFile = new FileCV
            {
                FileName = file.Name,
                ContentType = file.ContentType,
                Content = memoryStream.ToArray()
            };
    }

    private async Task UploadToDisc()
    {
        if (uploadedFile == null) return;

        //var response = await Http.PostAsync("uploadcv", content); // make sure the endpoint matches your API route
        var response = await _driveService.UploadCV(uploadedFile);

        if (response)
        {
            Console.WriteLine("File uploaded to disk.");
        }
        else
        {
            Console.WriteLine("Upload failed.");
        }
    }

}
