@page "/candidatelist"
@using GenderNeutralizer.App.Models
@using GenderNeutralizer.App.Services

@inject ITextExtractionService _textExtractionService
@inject ICandidateService _candidateService

@rendermode InteractiveServer

<h3>CandidateList</h3>

<!-- Gathering user from sql db -->
@if (candidates.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Numer</th>
                <th>Imie</th>
                <th>Nazwisko</th>
                <th>Akcja</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var candidate in candidates)
            {
                <tr>
                    <td>@candidate.CandidateId</td>
                    <td>@candidate.CandidateName</td>
                    <td>@candidate.CandidateLastName</td>
                    <td>
                        <!-- Add any actions you want, like download or delete -->
                        <button class="btn btn-danger btn-sm" @onclick="TextExtraction">Wyślij do managera</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No candidates in database .</p>
}

<!-- Gathering user base on local disc -->
@if (files != null && files.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>File Name</th>
                <th>File Size (KB)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var file in files)
            {
                <tr>
                    <td>@file.FileName</td>
                    <td>@(file.FileSize / 1024) KB</td>
                    <td>
                        <!-- Add any actions you want, like download or delete -->
                        <button class="btn btn-danger btn-sm" @onclick="TextExtraction">Neutralize</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No files found in the folder.</p>
}

@code {

    private List<Candidate> candidates = new List<Candidate>();

    private List<FileInfo> files;

    protected override async Task OnInitializedAsync()
    {
        // Gathering candidates from sql db
        candidates = await _candidateService.GetAllCandidatesAsync();

        string directoryPath = @"C:\VirtualServer\GenderNeutralizer"; // Replace with your folder path
        if (Directory.Exists(directoryPath))
        {
            var directoryInfo = new DirectoryInfo(directoryPath);
            files = directoryInfo.GetFiles()
                                 .Select(f => new FileInfo
                                     {
                                         FileName = f.Name,
                                         FileSize = f.Length
                                     })
                                 .ToList();
        }
        else
        {
            files = new List<FileInfo>();
        }
    }

    public class FileInfo
    {
        public string? FileName { get; set; }
        public long FileSize { get; set; }
    }

    public void TextExtraction()
    {
        // [LZ] Empty file !!!!
        FileCV file = new FileCV();
        var txt = _textExtractionService.ExtractTextFromFile(file);
    }
}