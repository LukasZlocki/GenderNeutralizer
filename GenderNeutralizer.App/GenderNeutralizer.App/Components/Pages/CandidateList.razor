@page "/candidatelist"
@using GenderNeutralizer.App.Models
@using GenderNeutralizer.App.Services

@inject ITextExtractionService _textExtractionService
@inject ICandidateService _candidateService

@rendermode InteractiveServer

<!-- Gathering new user from sql db -->
<br />
<h3>Nowi kandydaci:</h3>
@if (NewCandidates.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Numer</th>
                <th>Imie</th>
                <th>Nazwisko</th>
                <th>Akcja</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var candidate in NewCandidates)
            {
                <tr>
                    <td>@candidate.CandidateId</td>
                    <td>@candidate.CandidateName</td>
                    <td>@candidate.CandidateLastName</td>
                    <td>
                        <!-- Add any actions you want, like download or delete -->
                        <button class="btn btn-danger btn-sm" @onclick="() => TextExtraction(candidate.CvFilePath, candidate.CandidateId)">Wyślij do managera</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Brak nowych kandydatów .</p>
}

<!-- Gathering neutralized user from sql db -->
<br />
<br />
<br />
<h3>Kandydaci do decyzji:</h3>
@if (NewCandidates.Any())
{
    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle">
            <thead class="table-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Imię</th>
                    <th scope="col">Nazwisko</th>
                    <th scope="col">Akcja</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var candidate in NeutralizedCandidates)
                {
                    <tr>
                        <td>@candidate.CandidateId</td>
                        <td>@candidate.CandidateName</td>
                        <td>@candidate.CandidateLastName</td>
                        <td>
                            <button class="btn btn-outline-primary btn-sm"
                                    @onclick="() => TextExtraction(candidate.CvFilePath, candidate.CandidateId)">
                                Pokaż CV
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>Brak kandydatów.</p>
}


@code {

    private List<Candidate> NewCandidates = new List<Candidate>();
    private List<Candidate> NeutralizedCandidates = new List<Candidate>();

    protected override async Task OnInitializedAsync()
    {
        // Gathering new candidates from sql db
        NewCandidates = await _candidateService.GetAllCandidatesAsync();

        // Gathering neutralized candidates from sql db
        NeutralizedCandidates = await _candidateService.GetAllNeutralizedCandidatesAsync();

    }

    // On button click extracting text from pdf file
    public void TextExtraction(string filePath, int candidateId)
    {
        var txt = _textExtractionService.NeutralizeCandidateCv(filePath, candidateId);
    }
}