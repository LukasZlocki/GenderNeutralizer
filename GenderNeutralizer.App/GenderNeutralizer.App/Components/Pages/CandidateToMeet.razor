@page "/candidatetomeet"
@using GenderNeutralizer.App.Models
@using GenderNeutralizer.App.Services
<h3>Strefa HR</h3>

@inject ICandidateService _candidateService

<!-- Gathering neutralized user from sql db -->
<br />
<br />
<br />
<h3>Kandydaci do umówienia</h3>
@if (AcceptedCandidates.Any())
{
    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle">
            <thead class="table-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Imię</th>
                    <th scope="col">Nazwisko</th>
                    <th scope="col">Akcja</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var candidate in AcceptedCandidates)
                {
                    <tr>
                        <td>@candidate.CandidateId</td>
                        <td>@candidate.CandidateName</td>
                        <td>@candidate.CandidateLastName</td>
                        <td>
                            <button class="btn btn-outline-primary btn-sm"
                                    @onclick="() => ShowCandidate(candidate.NeutralizedText)">
                                Pokaż CV
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>Brak kandydatów.</p>
}

<!-- Modal to show neutralized cv -->
@if (showModal)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Zanonimizowane CV</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <pre>@selectedCandidateCv</pre> <!-- Preformatted for readability -->
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseModal">Zamknij</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private List<Candidate> AcceptedCandidates = new List<Candidate>();

    // For modal purposes
    private bool showModal = false;
    private string selectedCandidateCv = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Gathering neutralized candidates from sql db
        AcceptedCandidates = await _candidateService.GetAllCandidatesToMeetAsync();

    }

    private void ShowCandidate(string NeutralizedCv)
    {
        selectedCandidateCv = NeutralizedCv;
        showModal = true;
    }

    private void CloseModal()
    {
        showModal = false;
    }

}
